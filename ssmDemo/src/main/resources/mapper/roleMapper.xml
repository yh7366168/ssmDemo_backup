<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yh.dao.RoleDao">
    <resultMap id="BaseResultMap" type="com.yh.pojo.Role">
        <id column="role_id" property="roleId" jdbcType="INTEGER"/>
        <result column="role_name" property="roleName" jdbcType="VARCHAR"/>
        <result column="role_desc" property="roleDesc" jdbcType="VARCHAR"/>
        <result column="role_status" property="roleStatus" jdbcType="BIT"/>
        <result column="create_user" property="createUser" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_user" property="updateUser" jdbcType="VARCHAR"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        role_id, role_name, role_desc, role_status, create_user, create_time, update_user, update_time
    </sql>

    <sql id="where_params">
        <where>
            <if test="roleId != null">
                role_id = #{roleId}
            </if>
            <if test="roleName != null">
                role_name like CONCAT(CONCAT('%',#{roleName}),'%')
            </if>
        </where>
    </sql>

    <select id="queryPageCount" resultType="java.lang.Integer" parameterType="java.util.Map">
        SELECT count(1) FROM sys_role
        <include refid="where_params"></include>
    </select>

    <select id="queryPageList" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT
        <include refid="Base_Column_List"></include>
        FROM sys_role
        <include refid="where_params"></include>
        limit #{beginNum}, #{pageSize}
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from sys_role
        where role_id = #{roleId,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from sys_role
        where role_id = #{roleId,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="com.yh.pojo.Role">
      insert into sys_role
        (role_id, role_name, role_desc,
        role_status, create_user, create_time,
        update_user, update_time)
      values
        (#{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{roleDesc,jdbcType=VARCHAR},
         #{roleStatus,jdbcType=BIT}, #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
         #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>

    <insert id="insertSelective" parameterType="com.yh.pojo.Role">
        insert into sys_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                role_id,
            </if>
            <if test="roleName != null">
                role_name,
            </if>
            <if test="roleDesc != null">
                role_desc,
            </if>
            <if test="roleStatus != null">
                role_status,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateUser != null">
                update_user,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleDesc != null">
                #{roleDesc,jdbcType=VARCHAR},
            </if>
            <if test="roleStatus != null">
                #{roleStatus,jdbcType=BIT},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                #{updateUser,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.yh.pojo.Role">
        update sys_role
        <set>
            <if test="roleName != null">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleDesc != null">
                role_desc = #{roleDesc,jdbcType=VARCHAR},
            </if>
            <if test="roleStatus != null">
                role_status = #{roleStatus,jdbcType=BIT},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                update_user = #{updateUser,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where role_id = #{roleId,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.yh.pojo.Role">
      update sys_role
        set role_name = #{roleName,jdbcType=VARCHAR},
        role_desc = #{roleDesc,jdbcType=VARCHAR},
        role_status = #{roleStatus,jdbcType=BIT},
        create_user = #{createUser,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_user = #{updateUser,jdbcType=VARCHAR},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
       where role_id = #{roleId,jdbcType=INTEGER}
  </update>
</mapper>